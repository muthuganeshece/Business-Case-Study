About Delhivery

Delhivery is the largest and fastest-growing fully integrated player in India by revenue in Fiscal 2021. They aim to build the operating system for commerce, through a combination of world-class infrastructure, 
logistics operations of the highest quality, and cutting-edge engineering and technology capabilities.
The Data team builds intelligence and capabilities using this data that helps them to widen the gap between the quality, efficiency, and profitability of their business versus their competitors.

How can you help here?

The company wants to understand and process the data coming out of data engineering pipelines:

• Clean, sanitize and manipulate data to get useful features out of raw fields

• Make sense out of the raw data and help the data science team to build forecasting models on it

Dataset

Dataset Link: delhivery_data.csv

Steps to download the dataset:

Open the dataset link, which will launch a new browser window displaying the raw data.
In the newly opened window, right-click on any empty space without selecting any text, then choose "Save As."
A window will appear, prompting you to select the destination folder where you want to save the dataset.
Choose the desired location, provide a suitable name for the dataset, and ensure to include the ".csv" extension. Finally, click on the "Save" button.
Column Profiling:

data - tells whether the data is testing or training data
trip_creation_time – Timestamp of trip creation
route_schedule_uuid – Unique Id for a particular route schedule
route_type – Transportation type
FTL – Full Truck Load: FTL shipments get to the destination sooner, as the truck is making no other pickups or drop-offs along the way
Carting: Handling system consisting of small vehicles (carts)
trip_uuid - Unique ID given to a particular trip (A trip may include different source and destination centers)
source_center - Source ID of trip origin
source_name - Source Name of trip origin
destination_cente – Destination ID
destination_name – Destination Name
od_start_time – Trip start time
od_end_time – Trip end time
start_scan_to_end_scan – Time taken to deliver from source to destination
is_cutoff – Unknown field
cutoff_factor – Unknown field
cutoff_timestamp – Unknown field
actual_distance_to_destination – Distance in Kms between source and destination warehouse
actual_time – Actual time taken to complete the delivery (Cumulative)
osrm_time – An open-source routing engine time calculator which computes the shortest path between points in a given map (Includes usual traffic, distance through major and minor roads) and gives the time (Cumulative)
osrm_distance – An open-source routing engine which computes the shortest path between points in a given map (Includes usual traffic, distance through major and minor roads) (Cumulative)
factor – Unknown field
segment_actual_time – This is a segment time. Time taken by the subset of the package delivery
segment_osrm_time – This is the OSRM segment time. Time taken by the subset of the package delivery
segment_osrm_distance – This is the OSRM distance. Distance covered by subset of the package delivery
segment_factor – Unknown field
Concept Used:

Feature Creation
Relationship between Features
Column Normalization /Column Standardization
Handling categorical values
Missing values - Outlier treatment / Types of outliers
How to begin:

Since delivery details of one package are divided into several rows (think of it as connecting flights to reach a particular destination). 
Now think about how we should treat their fields if we combine these rows? What aggregation would make sense if we merge. What would happen to the numeric fields if we merge the rows?

Hint: You can use inbuilt functions like groupby and aggregations like sum(), cumsum() to merge some rows based on their 
1. Trip_uuid, Source ID and Destination ID 2. Further aggregate on the basis of just Trip_uuid. You can also keep the first and last values for some numeric/categorical fields if aggregating them won’t make sense.

Basic data cleaning and exploration:
Handle missing values in the data.
Analyze the structure of the data.
Try merging the rows using the hint mentioned above.
Build some features to prepare the data for actual analysis. Extract features from the below fields:
Destination Name: Split and extract features out of destination. City-place-code (State)
Source Name: Split and extract features out of destination. City-place-code (State)
Trip_creation_time: Extract features like month, year and day etc
In-depth analysis and feature engineering:
Calculate the time taken between od_start_time and od_end_time and keep it as a feature. Drop the original columns, if required
Compare the difference between Point a. and start_scan_to_end_scan. Do hypothesis testing/ Visual analysis to check.
Do hypothesis testing/ visual analysis between actual_time aggregated value and OSRM time aggregated value (aggregated values are the values you’ll get after merging the rows on the basis of trip_uuid)
Do hypothesis testing/ visual analysis between actual_time aggregated value and segment actual time aggregated value (aggregated values are the values you’ll get after merging the rows on the basis of trip_uuid)
Do hypothesis testing/ visual analysis between osrm distance aggregated value and segment osrm distance aggregated value (aggregated values are the values you’ll get after merging the rows on the basis of trip_uuid)
Do hypothesis testing/ visual analysis between osrm time aggregated value and segment osrm time aggregated value (aggregated values are the values you’ll get after merging the rows on the basis of trip_uuid)
Find outliers in the numerical variables (you might find outliers in almost all the variables), and check it using visual analysis
Handle the outliers using the IQR method.
Do one-hot encoding of categorical variables (like route_type)
Normalize/ Standardize the numerical features using MinMaxScaler or StandardScaler.
Evaluation Criteria (100 Points):

Define Problem Statement and perform Exploratory Data Analysis (10 points)
Definition of problem (as per given problem statement with additional views)
Observations on shape of data, data types of all the attributes, conversion of categorical attributes to 'category' (If required), missing value detection, statistical summary.
Visual Analysis (distribution plots of all the continuous variable(s), boxplots of all the categorical variables)
Insights based on EDA
Comments on range of attributes, outliers of various attributes
Comments on the distribution of the variables and relationship between them
Comments for each univariate and bivariate plot
Feature Creation (10 Points)
Merging of rows and aggregation of fields (10 Points)
Comparison & Visualization of time and distance fields (10 Points)
Missing values Treatment & Outlier treatment (10 Points)
Checking relationship between aggregated fields (10 Points)
Handling categorical values (10 Points)
Column Normalization /Column Standardization (10 Points)
Business Insights (10 Points) - Should include patterns observed in the data along with what you can infer from it. Eg:
Check from where most orders are coming from (State, Corridor etc)
Busiest corridor, avg distance between them, avg time taken
Recommendations (10 Points) - Actionable items for business. No technical jargon. No complications. Simple action items that everyone can understand.

Columns:
'data': Completed
'trip_creation_time': Completed
'route_schedule_uuid': Completed
'route_type': Completed
'trip_uuid',: Completed
'source_center',: Completed
'source_name', : Completed
'destination_center',: Completed
'destination_name', : Completed
'od_start_time', : Completed
'od_end_time',: Completed
'start_scan_to_end_scan', : Completed
'is_cutoff', : Completed
'cutoff_factor',: Completed
'cutoff_timestamp', : Completed
'actual_distance_to_destination', : Completed
'actual_time',: Completed
'osrm_time', : Completed
'osrm_distance', : Completed
'factor', : Completed
'segment_actual_time',: Completed
'segment_osrm_time', : Completed
'segment_osrm_distance', : Completed
'segment_factor': Completed

Hypothesis Tests:
- Check Distributions
	- actual_time, osrm_time
	- actual_time, segment_actual_time
	- osrm_time, segment_osrm_time
	- actual_distance_to_destination, osrm_distance
	- osrm_distance, segment_osrm_distance
- actual delivery time between Cart and FTL is significantly different?
- 

Business Insights:
- All Numerical variables are right skewed and outliers need to be addressed
- Dataset consists of 22 days
- Null values are detected for source_name, destination_name
- Data is split into 70/30 (approx) as training/test data
- Dataset contains only domestic deliveries
- factor = actual time / osrm Time 
- segment_Factor = segment_actual_time / segment_osrm_time
- IND284403 to IND474003 is the longest distance among the centers and eventually consumes more time
- Majority of trips are created over night
- Bengaluru, Hyderabad and Mumbai accounts for majority of intra city deliveries
- For intercity deliveries, Bhiwandi <-> Mumbai, Gurgaon <-> Delhi corridors are the busiest
- Maharashtra, Karnataka and Tamilnadu account for majority of intra state deliveries
- For inter state deliveries, Delhi <-> Haryana, Haryana <-> UP corridors are the busiest
- All the Numerical variables are highly correlated
- Actual time & Segment actual time follows same distribution whereas OSRM time & Segment OSRM time doesn't follow same distribution
- OSRM distance & Segment OSRM distance doesn't follow same distribution, indicates the discrepancy in the dataset
- Average Delivery time of Trucks is more than Average delivery time of Carts, indicates the Trucks are used for longer deliveries compared to carts

Recommendations:
- Trip created at night time takes more time to deliver
  Recommendation: Multiple over night trips should be scheduled
- Majority of the deliveries are between metro cities
  Recommendation: More focus should be tier II and tier III cities
- Though the trips between southern and northern regions are long distant, trips between northern and eastern trips consumes more time
  Recommendation: Better logistics is required to improve the efficiency of deliveries to/from eastern regions
- Actual Time and OSRM Time doesn't follow same distribution, indicates that there is a mismatch in the OSRM time calcualtion algorithm.
  Actually mean actual time is greater than mean OSRM time, indicates the algorithm underestimates the delivery time
  Recommendation: OSRM Time estimation algorithm to be recalibrated to better plan the deliveries
- Actual Distance and OSRM Distance doesn't follow same distribution, indicates that there is a mismatch in the OSRM distance calcualtion algorithm.
  Actually mean actual time is greater than mean OSRM time, indicates the algorithm underestimates the delivery time
  Recommendation: OSRM Distance estimation algorithm to be recalibrated to better plan the deliveries
  
  
  
Business Insights:

- All numerical variables are right-skewed with outliers, requiring data preprocessing.
- The dataset spans 22 days and contains only domestic deliveries.
- Null values are present in the source_name and destination_name fields, needing to be addressed.
- Data is split into 70/30 for training/testing.
- Actual time/OSRM time ratio (factor) and segment_actual_time/segment_osrm_time ratio (segment_factor) are key variables.

- The longest delivery route is between IND284403 and IND474003, consuming more time.
- Night trips dominate delivery creation, but take longer.
- Bengaluru, Hyderabad, and Mumbai handle the majority of intra-city deliveries.
- For intercity deliveries, the Bhiwandi <-> Mumbai and Gurgaon <-> Delhi corridors are the busiest.
- Maharashtra, Karnataka, and Tamil Nadu handle the majority of intra-state deliveries.
- Delhi <-> Haryana and Haryana <-> UP are the busiest inter-state corridors.

- Actual time and segment actual time follow the same distribution, but OSRM time and segment OSRM time don't, indicating inconsistencies in the OSRM data.
- OSRM distance and segment OSRM distance follow different distributions, highlighting discrepancies in dataset accuracy.
- Trucks take longer on average compared to carts, suggesting trucks are used for longer routes.

Recommendations:
- Improve Overnight Trip Scheduling: 
	- Overnight trips take more time to complete. 
	- To optimize, schedule multiple overnight trips to minimize delays.

- Focus on Tier II and Tier III Cities:
	- Since the majority of deliveries occur between metro cities, redirect focus to develop logistics in tier II and III cities for future growth.

- Enhance Logistics for Northern-Eastern Trips:
	- Although northern-southern trips cover long distances, northern-eastern trips consume more time. 
	- Invest in better logistics infrastructure to improve delivery efficiency in the eastern regions.

- Recalibrate OSRM Time Algorithm:
	- Actual Time and OSRM Time doesn't follow same distribution, indicates that there is a mismatch in the OSRM time calcualtion algorithm.
	- Infact, mean actual time is greater than mean OSRM time, indicates the algorithm underestimates the delivery time
	- OSRM Time estimation algorithm to be recalibrated to better plan the deliveries
	
- Recalibrate OSRM Distance Algorithm:
	- Actual Distance and OSRM Distance doesn't follow same distribution, indicates that there is a mismatch in the OSRM distance calcualtion algorithm.
	- OSRM Distance estimation algorithm to be recalibrated to better plan the deliveries
